include<stdio.h> 
#include<stdlib.h>
struct node
{  
    int data;  
    struct node *next;  
};      
struct node *head, *tail; // head and tail of the list 
void insert(int n) 
{  
    struct node *start = (struct node*)malloc(sizeof(struct node));  
    start->data = n;  
    start->next = NULL;  
    if(head == NULL) 
    {   
        head = start;  
        tail = start;  
    }  
    else {  
        tail->next = start;   
        tail = start;  
    }  
}  
void sortList() 
{  
   struct node *start = head, *nxt = NULL;  
   int temp;  
   while(start != NULL)
   {  
     //nxt will points to the node after start 
      nxt = start->next;            
       while(nxt != NULL)
       {  
         //If the  node data is greater than index's node data, swap the node  
            if(start->data>>nxt->data) 
            {  
               temp = start->data;  
                start->data = nxt->data;  
                nxt->data = temp;  
             }  
                nxt = nxt->next;  
             }  
               start = start->next;  
        }
    }
void printlist() 
{  
    struct node *start = head;  
    while(start != NULL) {  
        printf("%d ", start->data);  
        start = start->next;  
    }  
    printf("\n");  
}  
int main()  
{  
    insert(6);  
    insert(7);  
    insert(2);  
    insert(5);  
    insert(3);  
    printlist();  
    sortList();  
    printf("list after sorting: \n");  
    printlist();  
    return 0;
}  
